Parameters:
  TargetUrl:
    Description: URL to test. Precede with http:// or https://. Do not end with a /
    Type: String
    AllowedPattern: '^(http(s?):\/\/).*[^\/]'
    ConstraintDescription: should be a valid URL that starts with http:// or https:// and doesn't end with a /
  PeakUsers:
    Default: 3000
    Description: Max number of concurrent users
    Type: Number
  Duration:
    Default: 720
    Description: Total duration of test in sec. 1/3 will be ramp-up, 1/3 peak, 1/3 ramp-down
    Type: Number
  BucketName:
    Description: Name of an S3 bucket to upload test results to
    Type: String
  SelfDestruct:
    Default: true
    Description: If "true", the stack will delete itself after completing the test
    Type: String
  SSHKeyName:
    Description: (optional) Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: String
    MaxLength: '255'
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters
Conditions:
  HasKeyName: !Not [ !Equals [ "", !Ref SSHKeyName ] ]
Resources:
  LoadTestSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: LoadTestSG
      GroupDescription: 'Accept requests for SSH and ping'
      SecurityGroupIngress:
        - Description: ping
          IpProtocol: icmp
          CidrIp: 0.0.0.0/0
          FromPort: '8'
          ToPort: '-1'
        - Description: SSH
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '22'
          ToPort: '22'
  LoadTestRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: "BucketUse"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "s3:ListBucket"
                Resource: !Join [ "", [ "arn:aws:s3:::", !Ref BucketName ] ]
              -
                Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:DeleteObject"
                Resource: !Join [ "", [ "arn:aws:s3:::", !Ref BucketName, "/*" ] ]
        -
          PolicyName: "SelfDestruct"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                - "cloudformation:DeleteStack"
                Resource: !Ref "AWS::StackId"
              - Effect: Allow
                Action: [ "ec2:TerminateInstances" ]
                Resource: "*"
                Condition:
                  StringEquals:
                    "ec2:ResourceTag/aws:cloudformation:stack-id": !Ref AWS::StackId
              - Effect: Allow
                Action: [ "ec2:DescribeInstances" ]
                Resource: "*"
              - Effect: Allow
                Action:
                - "iam:RemoveRoleFromInstanceProfile"
                - "iam:DeleteInstanceProfile"
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:instance-profile/*"
              - Effect: Allow
                Action:
                - "iam:DeleteRole"
                - "iam:DeleteRolePolicy"
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/LoadTestRole"
              - Effect: Allow
                Action:
                - "ec2:DeleteSecurityGroup"
                - "ec2:RevokeSecurityGroupEgress"
                - "ec2:RevokeSecurityGroupIngress"
                Resource: "arn:aws:ec2:*:*:security-group/*"
      RoleName: "LoadTestRole"
  InstanceProfile:
    DependsOn: LoadTestRole
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - "LoadTestRole"
  TestBox:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: ami-047bb4163c506cd98
      InstanceInitiatedShutdownBehavior: terminate
      InstanceType: t2.large
      KeyName: !If [ HasKeyName, !Ref SSHKeyName, !Ref 'AWS::NoValue' ]
      SecurityGroups:
        - !Ref LoadTestSG
      Tags:
        - Key: Name
          Value: load-test
      UserData:
        Fn::Base64: !Sub |
          #!bin/bash
          wget http://${BucketName}.s3.amazonaws.com/aws-userdata.sh
          chmod +x aws-userdata.sh
          ./aws-userdata.sh ${TargetUrl} ${PeakUsers} ${Duration} ${BucketName} ${SelfDestruct} ${AWS::StackId} ${AWS::Region}
          rm aws-userdata.sh
